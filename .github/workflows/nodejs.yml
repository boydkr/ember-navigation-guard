# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: volta-cli/action@v1
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm install
    - run: npm run lint
    - run: npm run test:ember
      env:
        CI: true
  ember-try:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        try-scenario: [ember-lts-3.16,
                       ember-release,
                       ember-beta,
                       ember-default-with-jquery,
                       ember-classic]

    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
      with:
        node-version: 10.x
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm install
    - run: npm run test:try-one ${{ matrix.try-scenario }}
      env:
        CI: true
  

  deploy-prod:
    name: Production Deploy
    runs-on: ubuntu-latest
    needs: [build, ember-try]
    # if: (branch = master OR tag IS present) AND type = push
    # if: success() && github.ref == 'refs/heads/master' && github.event_name == 'push'
    if: success() && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v1
      - uses: rwjblue/setup-volta@v1
      - name: Set ENV
        # 'master' or 'v1.2.3'
        run: echo "::set-env name=ADDON_DOCS_VERSION_PATH::${GITHUB_REF##*/}"
      - name: Install
        run: yarn install
      - name: Deploy
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: yarn ember deploy production --verbose --activate
